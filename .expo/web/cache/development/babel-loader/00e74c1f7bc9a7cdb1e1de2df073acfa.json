{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\programing\\\\React-Native\\\\App\\\\MiniProject2-Fronend\\\\screens\\\\LoadingScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nvar LoadingScreen = function LoadingScreen(props) {\n  var detectLogin = function detectLogin() {\n    var token;\n    return _regeneratorRuntime.async(function detectLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n          case 2:\n            token = _context.sent;\n\n            if (token) {\n              props.navigation.replace(\"Tabs\");\n            } else {\n              props.navigation.replace(\"Login\");\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    detectLogin();\n  }, []);\n  return React.createElement(View, {\n    style: styles.loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"blue\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  loading: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nexport default LoadingScreen;","map":{"version":3,"sources":["D:/programing/React-Native/App/MiniProject2-Fronend/screens/LoadingScreen.js"],"names":["React","useEffect","AsyncStorage","LoadingScreen","props","detectLogin","getItem","token","navigation","replace","styles","loading","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAGA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEH,YAAY,CAACI,OAAb,CAAqB,OAArB,CADF;;AAAA;AACZC,YAAAA,KADY;;AAElB,gBAAIA,KAAJ,EAAW;AACTH,cAAAA,KAAK,CAACI,UAAN,CAAiBC,OAAjB,CAAyB,MAAzB;AACD,aAFD,MAEO;AACLL,cAAAA,KAAK,CAACI,UAAN,CAAiBC,OAAjB,CAAyB,OAAzB;AACD;;AANiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAQAR,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAlBD;;AAoBA,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,OAAO,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE;AAHL;AADsB,CAAlB,CAAf;AAQA,eAAeb,aAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Button, TextInput } from \"react-native\";\r\nimport { ActivityIndicator, View, StyleSheet } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst LoadingScreen = (props) => {\r\n  const detectLogin = async () => {\r\n    const token = await AsyncStorage.getItem(\"token\");\r\n    if (token) {\r\n      props.navigation.replace(\"Tabs\");\r\n    } else {\r\n      props.navigation.replace(\"Login\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    detectLogin();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.loading}>\r\n      <ActivityIndicator size=\"large\" color=\"blue\" />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  loading: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport default LoadingScreen;\r\n"]},"metadata":{},"sourceType":"module"}