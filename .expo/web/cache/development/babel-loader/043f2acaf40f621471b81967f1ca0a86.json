{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\programing\\\\React-Native\\\\App\\\\MiniProject2-Fronend\\\\App.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SignupScreen from \"./screens/SignupScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport LoadingScreen from \"./screens/LoadingScreen\";\nimport HomeSceen from \"./screens/HomeScreen\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Tabs from \"./screens/tabs\";\nvar Stack = createStackNavigator();\n\nvar App = function App(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      isloggedin = _useState2[0],\n      setLogged = _useState2[1];\n\n  var detectLogin = function detectLogin() {\n    var token;\n    return _regeneratorRuntime.async(function detectLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n          case 2:\n            token = _context.sent;\n\n            if (token) {\n              setLogged(true);\n            } else {\n              setLogged(false);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    detectLogin();\n  }, []);\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    headerMode: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Loading\",\n    component: LoadingScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Tabs\",\n    component: Tabs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"signup\",\n    component: SignupScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["D:/programing/React-Native/App/MiniProject2-Fronend/App.js"],"names":["React","useEffect","useState","NavigationContainer","createStackNavigator","SignupScreen","LoginScreen","LoadingScreen","HomeSceen","AsyncStorage","Tabs","Stack","App","navigation","isloggedin","setLogged","detectLogin","getItem","token"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;AAIA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;AACA,OAAOC,SAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,IAAP;AAEA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;;AAEA,IAAMQ,GAAG,GAAG,SAANA,GAAM,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAC9B,kBAAgCX,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOY,UAAP;AAAA,MAAmBC,SAAnB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEP,YAAY,CAACQ,OAAb,CAAqB,OAArB,CADF;;AAAA;AACZC,YAAAA,KADY;;AAElB,gBAAIA,KAAJ,EAAW;AACTH,cAAAA,SAAS,CAAC,IAAD,CAAT;AACD,aAFD,MAEO;AACLA,cAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AANiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAQAd,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,UAAU,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAET,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEG,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAEJ,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,SAAS,EAAED,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF;AAUD,CAzBD;;AA2BA,eAAeO,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, TextInput } from \"react-native\";\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\n\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nimport SignupScreen from \"./screens/SignupScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport LoadingScreen from \"./screens/LoadingScreen\";\r\nimport HomeSceen from \"./screens/HomeScreen\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport Tabs from \"./screens/tabs\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst App = ({ navigation }) => {\r\n  const [isloggedin, setLogged] = useState(null);\r\n\r\n  const detectLogin = async () => {\r\n    const token = await AsyncStorage.getItem(\"token\");\r\n    if (token) {\r\n      setLogged(true);\r\n    } else {\r\n      setLogged(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    detectLogin();\r\n  }, []);\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator headerMode=\"none\">\r\n        <Stack.Screen name=\"Loading\" component={LoadingScreen} />\r\n        <Stack.Screen name=\"Tabs\" component={Tabs} />\r\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n        <Stack.Screen name=\"signup\" component={SignupScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}